// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Resturent_1.Data;

#nullable disable

namespace Online_Resturent_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230301091205_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Online_Resturent_1.Models.Customer", b =>
                {
                    b.Property<int>("Cu_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cu_Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Cu_Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Cu_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Cu_Password")
                        .HasColumnType("longtext");

                    b.HasKey("Cu_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Food", b =>
                {
                    b.Property<int>("Food_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Food_Name")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Food_price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob");

                    b.Property<int>("Or_ID")
                        .HasColumnType("int");

                    b.HasKey("Food_ID");

                    b.HasIndex("Or_ID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Order", b =>
                {
                    b.Property<int>("Or_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cu_ID")
                        .HasColumnType("int");

                    b.Property<string>("Order_Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Or_ID");

                    b.HasIndex("Cu_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Payment", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bank")
                        .HasColumnType("longtext");

                    b.Property<string>("Card")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Or_ID")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.HasIndex("Or_ID")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Food", b =>
                {
                    b.HasOne("Online_Resturent_1.Models.Order", "Order")
                        .WithMany("Foods")
                        .HasForeignKey("Or_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Order", b =>
                {
                    b.HasOne("Online_Resturent_1.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Cu_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Payment", b =>
                {
                    b.HasOne("Online_Resturent_1.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Online_Resturent_1.Models.Payment", "Or_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Online_Resturent_1.Models.Order", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("Payment");
                });
#pragma warning restore 612, 618
        }
    }
}
